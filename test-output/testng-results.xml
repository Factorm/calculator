<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="9" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="41055" started-at="2017-07-24T11:13:07Z" finished-at="2017-07-24T11:13:48Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="41055" started-at="2017-07-24T11:13:07Z" finished-at="2017-07-24T11:13:48Z">
      <class name="tests.calculatorDivideTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="beforeMethod" is-config="true" duration-ms="3822" started-at="2017-07-24T13:13:07Z" finished-at="2017-07-24T13:13:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="shouldDivideTwoNumbers" duration-ms="514" started-at="2017-07-24T13:13:11Z" data-provider="divData" finished-at="2017-07-24T13:13:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDivideTwoNumbers -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="afterMethod" is-config="true" duration-ms="991" started-at="2017-07-24T13:13:12Z" finished-at="2017-07-24T13:13:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldDivideTwoNumbers status=SUCCESS method=calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="beforeMethod" is-config="true" duration-ms="3301" started-at="2017-07-24T13:13:13Z" finished-at="2017-07-24T13:13:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="shouldDivideTwoNumbers" duration-ms="482" started-at="2017-07-24T13:13:16Z" data-provider="divData" finished-at="2017-07-24T13:13:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDivideTwoNumbers -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="afterMethod" is-config="true" duration-ms="721" started-at="2017-07-24T13:13:17Z" finished-at="2017-07-24T13:13:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldDivideTwoNumbers status=SUCCESS method=calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="beforeMethod" is-config="true" duration-ms="3189" started-at="2017-07-24T13:13:17Z" finished-at="2017-07-24T13:13:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="shouldDivideTwoNumbers" duration-ms="483" started-at="2017-07-24T13:13:20Z" data-provider="divData" finished-at="2017-07-24T13:13:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDivideTwoNumbers -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="afterMethod" is-config="true" duration-ms="718" started-at="2017-07-24T13:13:21Z" finished-at="2017-07-24T13:13:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldDivideTwoNumbers status=SUCCESS method=calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="beforeMethod" is-config="true" duration-ms="3191" started-at="2017-07-24T13:13:22Z" finished-at="2017-07-24T13:13:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="shouldDivideTwoNumbers" duration-ms="476" started-at="2017-07-24T13:13:25Z" data-provider="divData" finished-at="2017-07-24T13:13:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDivideTwoNumbers -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="afterMethod" is-config="true" duration-ms="728" started-at="2017-07-24T13:13:25Z" finished-at="2017-07-24T13:13:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldDivideTwoNumbers status=SUCCESS method=calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="beforeMethod" is-config="true" duration-ms="3213" started-at="2017-07-24T13:13:26Z" finished-at="2017-07-24T13:13:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="shouldDivideTwoNumbers" duration-ms="479" started-at="2017-07-24T13:13:29Z" data-provider="divData" finished-at="2017-07-24T13:13:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDivideTwoNumbers -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="afterMethod" is-config="true" duration-ms="714" started-at="2017-07-24T13:13:30Z" finished-at="2017-07-24T13:13:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldDivideTwoNumbers status=SUCCESS method=calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="beforeMethod" is-config="true" duration-ms="3200" started-at="2017-07-24T13:13:30Z" finished-at="2017-07-24T13:13:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="shouldDivideTwoNumbers" duration-ms="483" started-at="2017-07-24T13:13:34Z" data-provider="divData" finished-at="2017-07-24T13:13:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDivideTwoNumbers -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="afterMethod" is-config="true" duration-ms="719" started-at="2017-07-24T13:13:34Z" finished-at="2017-07-24T13:13:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldDivideTwoNumbers status=SUCCESS method=calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="beforeMethod" is-config="true" duration-ms="3191" started-at="2017-07-24T13:13:35Z" finished-at="2017-07-24T13:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="shouldDivideTwoNumbers" duration-ms="480" started-at="2017-07-24T13:13:38Z" data-provider="divData" finished-at="2017-07-24T13:13:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDivideTwoNumbers -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="afterMethod" is-config="true" duration-ms="712" started-at="2017-07-24T13:13:39Z" finished-at="2017-07-24T13:13:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldDivideTwoNumbers status=SUCCESS method=calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="beforeMethod" is-config="true" duration-ms="3197" started-at="2017-07-24T13:13:39Z" finished-at="2017-07-24T13:13:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="shouldDivideTwoNumbers" duration-ms="472" started-at="2017-07-24T13:13:42Z" data-provider="divData" finished-at="2017-07-24T13:13:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDivideTwoNumbers -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="afterMethod" is-config="true" duration-ms="711" started-at="2017-07-24T13:13:43Z" finished-at="2017-07-24T13:13:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldDivideTwoNumbers status=SUCCESS method=calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="beforeMethod" is-config="true" duration-ms="3188" started-at="2017-07-24T13:13:44Z" finished-at="2017-07-24T13:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="shouldDivideTwoNumbers" duration-ms="479" started-at="2017-07-24T13:13:47Z" data-provider="divData" finished-at="2017-07-24T13:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDivideTwoNumbers -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.calculatorDivideTest@204f30ec]" name="afterMethod" is-config="true" duration-ms="709" started-at="2017-07-24T13:13:47Z" finished-at="2017-07-24T13:13:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldDivideTwoNumbers status=SUCCESS method=calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String, java.lang.String)[pri:0, instance:tests.calculatorDivideTest@204f30ec] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.calculatorDivideTest.shouldDivideTwoNumbers(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.calculatorDivideTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
